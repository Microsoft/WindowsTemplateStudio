<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                    
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/_Colors.xaml" />
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/_Thickness.xaml" />
        <ResourceDictionary Source="/Microsoft.Templates.UI;component/Styles/StyleTextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="Button" x:Key="ButtonNavigationStyle">
        <Setter Property="Margin" Value="{StaticResource MediumLeftMargin}" />
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="27" />
        <Setter Property="Foreground" Value="{StaticResource UIBlack}" />
        <Setter Property="BorderBrush" Value="{StaticResource UIBlack}" />
        <Setter Property="Background" Value="{StaticResource UIMiddleLightGray}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.Background>
                                        <SolidColorBrush Color="{StaticResource UIBlueColor}" Opacity="0.2"/>
                                    </Grid.Background>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonFinishStyle" BasedOn="{StaticResource ButtonNavigationStyle}">
        <Setter Property="Foreground" Value="{StaticResource UIWhite}" />
        <Setter Property="Background" Value="{StaticResource UIBlue}" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.Background>
                                        <SolidColorBrush Color="{StaticResource UIWhiteColor}" Opacity="0.2"/>
                                    </Grid.Background>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="TemplateInfoButtonFocusStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{StaticResource UIBlack}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="Button" x:Key="BlueBaseTemplateInfoButtonStyle">
        <Setter Property="Foreground" Value="{StaticResource UIBlue}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.Setters>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource UILightGray}"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource UIDarkBlue}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InfoButtonFocusStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{StaticResource UIBlueColor}" Opacity="0.2"/>
                        </Ellipse.Fill>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="BlackBaseTemplateInfoButtonStyle">
        <Setter Property="Foreground" Value="{StaticResource UIBlack}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource InfoButtonFocusStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.Setters>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource UILightGray}"/>
                </Trigger.Setters>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource UIBlue}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="InfoTemplateInfoButtonStyle" BasedOn="{StaticResource BlackBaseTemplateInfoButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock Text="&#xE946;" FontSize="18" Style="{StaticResource RoundButtonTextStyle}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="CloseEditionInfoButtonStyle" BasedOn="{StaticResource BlackBaseTemplateInfoButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <TextBlock Text="&#xECCA;" FontSize="18" Style="{StaticResource RoundButtonTextStyle}" />
                    <TextBlock Text="&#xE894;" FontSize="9" Style="{StaticResource RoundButtonTextStyle}" />
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="MoreInfoButtonStyle" BasedOn="{StaticResource BlackBaseTemplateInfoButtonStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <TextBlock Text="&#xECCA;" FontSize="25" Style="{StaticResource RoundButtonTextStyle}"/>
                    <TextBlock Text="{Binding ToggleButtonIcon}" FontSize="12" Style="{StaticResource RoundButtonTextStyle}" />
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="RemoveButtonStyle">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource UIRed}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.Setters>
                                <Setter Property="Foreground" Value="{StaticResource UIGray}"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.Setters>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter Property="Foreground" Value="{StaticResource UIDarkRed}"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddButtonFocusStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5,2,2,2">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{StaticResource UIBlueColor}" Opacity="0.2"/>
                        </Ellipse.Fill>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="AddTemplateInfoButtonStyle" BasedOn="{StaticResource BlueBaseTemplateInfoButtonStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource AddButtonFocusStyle}"/>
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <TextBlock Text="&#xECCA;" FontSize="25" Style="{StaticResource RoundButtonTextStyle}" />
                    <TextBlock Text="&#xE948;" Margin="1,1,0,0" FontSize="12" Style="{StaticResource RoundButtonTextStyle}" />
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SaveTemplateInfoButtonStyle" BasedOn="{StaticResource BlueBaseTemplateInfoButtonStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource AddButtonFocusStyle}"/>
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <TextBlock Text="&#xECCA;" FontSize="25" Style="{StaticResource RoundButtonTextStyle}" />
                    <TextBlock Text="&#xE8FB;" Margin="0,1,0,0" FontSize="12" Style="{StaticResource RoundButtonTextStyle}" />
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>